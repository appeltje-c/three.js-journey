/*
Auto-generated by: https://github.com/pmndrs/gltfjsx
*/

import React, { useEffect, useRef } from 'react'
import { useGLTF, useAnimations } from '@react-three/drei'
import { useControls } from 'leva'

export default function Fox(props) {

    const group = useRef()
    const { nodes, materials, animations } = useGLTF('./Fox/glTF-Binary/Fox.glb')
    const { actions, names } = useAnimations(animations, group)

    const { animationName } = useControls('Fox', {
        animationName: { options: names }
    })

    useEffect(() => {

        const action = actions[animationName]
        action.reset().fadeIn(0.5).play()

        return () => {
            action.fadeOut(0.5)
        }


    }, [animationName])



    return (
        <group ref={group} {...props} dispose={null}>
            <group>
                <group name="root" userData={{ name: 'root' }}>
                    <skinnedMesh
                        name="fox"
                        geometry={nodes.fox.geometry}
                        material={materials.fox_material}
                        skeleton={nodes.fox.skeleton}
                        userData={{ name: 'fox' }}
                    />
                    <primitive object={nodes._rootJoint} />
                </group>
            </group>
        </group>
    )
}

useGLTF.preload('./Fox/glTF-Binary/Fox.glb')
